/**
 * RESP.app Extension server
 * RESP.app Extension Server API allows you to extend RESP.app with your custom data formatters
 *
 * The version of the OpenAPI document: 2022.0-preview1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEncodePayload.h
 *
 * 
 */

#ifndef OAIEncodePayload_H
#define OAIEncodePayload_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace RespExtServer {

class OAIEncodePayload : public OAIObject {
public:
    OAIEncodePayload();
    OAIEncodePayload(QString json);
    ~OAIEncodePayload() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getData() const;
    void setData(const QString &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    OAIObject getMetadata() const;
    void setMetadata(const OAIObject &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString data;
    bool m_data_isSet;
    bool m_data_isValid;

    OAIObject metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;
};

} // namespace RespExtServer

Q_DECLARE_METATYPE(RespExtServer::OAIEncodePayload)

#endif // OAIEncodePayload_H
