/**
 * RESP.app Extension server
 * RESP.app Extension Server API allows you to extend RESP.app with your custom data formatters
 *
 * The version of the OpenAPI document: 2022.0-preview1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDecodePayload.h
 *
 * 
 */

#ifndef OAIDecodePayload_H
#define OAIDecodePayload_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace RespExtServer {

class OAIDecodePayload : public OAIObject {
public:
    OAIDecodePayload();
    OAIDecodePayload(QString json);
    ~OAIDecodePayload() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getData() const;
    void setData(const QString &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    QString getRedisKeyName() const;
    void setRedisKeyName(const QString &redis_key_name);
    bool is_redis_key_name_Set() const;
    bool is_redis_key_name_Valid() const;

    QString getRedisKeyType() const;
    void setRedisKeyType(const QString &redis_key_type);
    bool is_redis_key_type_Set() const;
    bool is_redis_key_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString data;
    bool m_data_isSet;
    bool m_data_isValid;

    QString redis_key_name;
    bool m_redis_key_name_isSet;
    bool m_redis_key_name_isValid;

    QString redis_key_type;
    bool m_redis_key_type_isSet;
    bool m_redis_key_type_isValid;
};

} // namespace RespExtServer

Q_DECLARE_METATYPE(RespExtServer::OAIDecodePayload)

#endif // OAIDecodePayload_H
